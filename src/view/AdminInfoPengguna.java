/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

/**
 *
 * @author LENOVO
 */
import javax.swing.table.DefaultTableModel;
import config.koneksi;
import java.sql.Connection;
import java.sql.*;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showConfirmDialog;
import static javax.swing.JOptionPane.showMessageDialog;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

public class AdminInfoPengguna extends javax.swing.JPanel {

    /**
     * Creates new form AdminInfoPengguna
     */
    private final Connection con;
    public AdminInfoPengguna() {
        initComponents();
        
       con = koneksi.getConnection();
       setTableModel();
       loadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelPengguna = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        tfNama = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tfUser = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        pfPass = new javax.swing.JPasswordField();
        btnSimpan = new javax.swing.JButton();
        btnUbah = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnCetak = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(881, 336));
        setLayout(new java.awt.CardLayout());

        jPanel1.setPreferredSize(new java.awt.Dimension(881, 336));

        tabelPengguna.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabelPengguna.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelPenggunaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelPengguna);

        jLabel5.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel5.setText("Informasi Akun Pengguna");

        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Nama Lengkap");

        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Username");

        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("Password");

        btnSimpan.setText("SIMPAN");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnUbah.setText("UBAH");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        btnHapus.setText("HAPUS");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnClear.setText("CLEAR");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnCetak.setText("CETAK");
        btnCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCetakActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1)
                            .addComponent(tfNama)
                            .addComponent(jLabel2)
                            .addComponent(tfUser)
                            .addComponent(jLabel3)
                            .addComponent(pfPass))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCetak))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnSimpan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUbah)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnHapus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClear)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(btnCetak)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pfPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSimpan)
                            .addComponent(btnUbah)
                            .addComponent(btnHapus)
                            .addComponent(btnClear))
                        .addGap(36, 36, 36))))
        );

        add(jPanel1, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
       try {
            Statement st = con.createStatement();
            if("".equals(tfNama.getText())){
                JOptionPane.showMessageDialog(new JFrame(), "Nama lengkap kosong", "Error",
                        JOptionPane.ERROR_MESSAGE);
            }else if("".equals(tfUser.getText())){
                JOptionPane.showMessageDialog(new JFrame(), "Username Kosong", "Error",
                        JOptionPane.ERROR_MESSAGE);
            }else if("".equals(this.pfPass.getText())){
                JOptionPane.showMessageDialog(new JFrame(), "Password Kosong", "Error",
                        JOptionPane.ERROR_MESSAGE);
            }else {
            String fullName = tfNama.getText(); 
            String username    = tfUser.getText();
            String Password = pfPass.getText();
            System.out.println(Password);
            
            // Validasi cek username 
            String checkQuery = "SELECT * FROM pengguna WHERE username = '" + username + "'";
            ResultSet resultSet = st.executeQuery(checkQuery);

            if (resultSet.next()) {
                // Username sudah terdaftar
                JOptionPane.showMessageDialog(new JFrame(), "Username sudah terdaftar", "Error",
                        JOptionPane.ERROR_MESSAGE);
            } else{ 
                //Username belum terdaftar
                String query = "INSERT INTO pengguna(nama_lengkap, username, kata_sandi)"+
                    "VALUES('"+fullName+"', '"+username+"' , '"+Password+"')";
            
            st.execute(query);
            tfNama.setText("");
            tfUser.setText("");
            pfPass.setText("");
            showMessageDialog(null, "Akun berhasil dibuat");
             // Setelah menyimpan, perbarui model tabel dan tampilkan data terbaru
             DefaultTableModel model = (DefaultTableModel) tabelPengguna.getModel();
             loadData(); // Memanggil metode loadData untuk memperbarui model tabel
             model.fireTableDataChanged(); // Memastikan tabel merender ulang data
            }
            }
        }catch(Exception e){
           System.out.println("Error!" + e.getMessage()); 
        }    
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
        try {
        int selectedRow = tabelPengguna.getSelectedRow();

        if (selectedRow == -1) {
            // Jika tidak ada baris yang dipilih, tampilkan pesan kesalahan
            JOptionPane.showMessageDialog(null, "Pilih baris yang akan diubah.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Statement st = con.createStatement();
        DefaultTableModel model = (DefaultTableModel) tabelPengguna.getModel();

        // Dapatkan nilai kolom dari baris yang dipilih
        String idPengguna = model.getValueAt(selectedRow, 0).toString();
        String fullName = tfNama.getText(); 
        String username = tfUser.getText();
        String password = pfPass.getText();

        // Validasi cek username agar tidak terdapat duplikasi
        String checkQuery = "SELECT * FROM pengguna WHERE username = '" + username + "' AND pengguna_id != " + idPengguna;
        ResultSet resultSet = st.executeQuery(checkQuery);

        if (resultSet.next()) {
            // Username sudah terdaftar untuk pengguna lain
            JOptionPane.showMessageDialog(null, "Username sudah terdaftar", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            // Lakukan pembaruan data di database
            String query = "UPDATE pengguna SET nama_lengkap=?, username=?, kata_sandi=? WHERE pengguna_id=?";
            try (PreparedStatement ps = con.prepareStatement(query)) {
                ps.setString(1, fullName);
                ps.setString(2, username);
                ps.setString(3, password);
                ps.setString(4, idPengguna);
                ps.executeUpdate();

                tfNama.setText("");
                tfUser.setText("");
                pfPass.setText("");
                showMessageDialog(null, "Data berhasil diubah.");

                // Setelah menyimpan, perbarui model tabel dan tampilkan data terbaru
                model.setRowCount(0); // Membersihkan data lama
                loadData(); // Memanggil metode loadData untuk memperbarui model tabel
            }
        }
    } catch (Exception e) {
        System.out.println("Error!" + e.getMessage());
    }
    }//GEN-LAST:event_btnUbahActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        try {
        int selectedRow = tabelPengguna.getSelectedRow();

        if (selectedRow == -1) {
            // Jika tidak ada baris yang dipilih, tampilkan pesan kesalahan
            JOptionPane.showMessageDialog(null, "Pilih baris yang akan dihapus.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Statement st = con.createStatement();
        DefaultTableModel model = (DefaultTableModel) tabelPengguna.getModel();

        // Dapatkan nilai kolom dari baris yang dipilih
        String idPengguna = model.getValueAt(selectedRow, 0).toString();

        // Konfirmasi pengguna untuk menghapus data
        int response = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menghapus data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);

        if (response == JOptionPane.YES_OPTION) {
            // Hapus data dari tabel
            model.removeRow(selectedRow);

            // Hapus data dari database
            String query = "DELETE FROM pengguna WHERE id_pengguna=?";
            try (PreparedStatement ps = con.prepareStatement(query)) {
                ps.setString(1, idPengguna);
                ps.executeUpdate();
                showMessageDialog(null, "Data berhasil dihapus.");
                tfNama.setText("");
                tfUser.setText("");
                pfPass.setText("");
            }
        }
    } catch (Exception e) {
        System.out.println("Error!" + e.getMessage());
    }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void tabelPenggunaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelPenggunaMouseClicked
              
     // Mendapatkan indeks baris yang diklik
    int selectedRow = tabelPengguna.getSelectedRow();

    // Memastikan baris yang dipilih adalah valid
    if (selectedRow != -1) {
        DefaultTableModel model = (DefaultTableModel) tabelPengguna.getModel();

        // Mendapatkan nilai dari setiap kolom pada baris yang dipilih
        String idPengguna = model.getValueAt(selectedRow, 0).toString();
        String nama = model.getValueAt(selectedRow, 1).toString();
        String username = model.getValueAt(selectedRow, 2).toString();
        String pass = model.getValueAt(selectedRow, 3).toString();


        // Menampilkan nilai-nilai tersebut pada JTextField dan JComboBox
        tfNama.setText(nama);
        tfUser.setText(username);
        pfPass.setText(pass);
    }
    }//GEN-LAST:event_tabelPenggunaMouseClicked

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        tfNama.setText("");
        tfUser.setText("");
        pfPass.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCetakActionPerformed
        try {

            // Load report design (file .jasper)
            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(getClass().getResource("/report/reportAkun.jasper"));

            // Set parameter jika diperlukan
            Map<String, Object> parameters = new HashMap<>();

            // Mengisi laporan menggunakan JasperFillManager
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, con);

            // Menampilkan laporan menggunakan JasperViewer
            JasperViewer.viewReport(jasperPrint, false);

        } catch (JRException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCetakActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCetak;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnUbah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPasswordField pfPass;
    private javax.swing.JTable tabelPengguna;
    private javax.swing.JTextField tfNama;
    private javax.swing.JTextField tfUser;
    // End of variables declaration//GEN-END:variables

    private void setTableModel() {
        DefaultTableModel model = (DefaultTableModel) tabelPengguna.getModel();
        model.addColumn("ID Pengguna");
        model.addColumn("Nama Lengkap");
        model.addColumn("Username");
        model.addColumn("Password");
    }

    private void loadData() {
        getData((DefaultTableModel)tabelPengguna.getModel());
    }
    private void getData(DefaultTableModel model) {
                model.setRowCount(0);
        
        try {
            String sql = "SELECT * FROM pengguna";
            try (PreparedStatement st = con.prepareStatement(sql)){
              ResultSet rs = st.executeQuery();
              
                while (rs.next()) {
                    String idPengguna = rs.getString("pengguna_id");
                    String nama = rs.getString("nama_lengkap");
                    String username = rs.getString("username");
                    String pass = rs.getString("kata_sandi");
                    
                    Object[]rowData ={idPengguna,nama,username,pass};
                    model.addRow(rowData);
                }
            } 
        } catch (SQLException e) {
            Logger.getLogger(AdminInfoPengguna.class.getName()).log(Level.SEVERE,null,e);
        }
    }
}
